varaible (변하는 상태; 변수) vs constant(변하지 않는 상태)

그중에서 variable은 분류가 가능합니다.
분류기준을 두고, 나누는데

크게 이분하면: categorical, norminal (=:name)
categorical은 둘로 나누는데 : ordinal(=: order, 순서가 있음), numeric(=:number, 수치)

그래서 결국은 
ordinal, numberic, norminal
변수의 편집 방향은 곧 위 3중에서 한가지 선택사항으로 주관식 -> 객관식

이곳(확률통계코딩)은 정답보다는 적합하다라는 개념 p.142

embarked p.138 ; 누락된 값 처리
지금 이 embarked 지우면 안되고 즉 dropna를 쓰면 안되고
누락된 값을 대체합니다.

여기서 null 값을 무엇으로 넣을 것인가?
평균값을 넣자고 책에는 되어있지만 이 예제는 str이여서 평균을 구할 수 없음
그래서 가장 많이 승선한 항으로 대체
물론 이 방법이 통계를 왜국할 수 있지만 그 null의 수가 적으니 무시
왜냐하면 빈값이 있으면 아예 그 변수를 사용할 수 없어서
그것보다는 차선을 택하는 것

이 예제에서는 southampton에서 승석객의 비율이 높아서 s로 대체하기로 합니다
(이것은 절대적인 것은 아니고 주관적인 의견을 반영한다)

변수명은 ['변수명 '] , 변수값은 {'변수값'}


코딩은 반복된 코드를 싫어합니다.
for(), while() 이 syntax가 존재하는 이유

그래서 위 코드에서 반복을 피하기 위해 (지도학습의 숙명인 train과 test 둘다 편집해야하는 상황)
다음과 같은 코드가 나옵니다.

@staticmethod
    def sex_norminal(this) -> object :
        this.train['Sex'] = this.train['Sex'].map({'male':0, 'female': 1}) 
        this.test['Sex'] = this.test['Sex'].map({'male':0, 'female': 1}) 
        return this
^에서 v로 바꿔준다
  @staticmethod
    def sex_norminal(this) -> object :
        combine = [this.train, this.test] # train과 test가 묶입니다.
        sex_mapping = {'male':0 , 'female': 1}
        for dataset in combine:
            dataset['Sex'] = dataset['Sex'].map(sex_mapping)
        this.train = this.train #overriding
        this.test = this.test
        return this  


for x in range(len(train['AgeGroup'])) :
            if train['AgeGroup'][x] == 'Unknown' :  #[]list -> [][]matrix      
                train['AgeGroup'][x] = age_title_mapping[train['Title'][x]]
        for x in range(len(test['AgeGroup'])) :
            if test['AgeGroup'][x] == 'Unknown' : 
                test['AgeGroup'][x] = age_title_mapping[test['Title'][x]]       


Data 수집
    - 방법론
    - 정형 데이터(csv) =  스키마구조 존재, computer 인식 
    - 비정형 = 스키마구조 존재하지 않다 computer 인식 불가
    - 웹 -> 웹크롤링 -> 브라우저, Regex
    - 문서 -> 텍스트마이닝 -> Regular Expression(정규표현식)
Data 정제(정형화)
Modelling
Learning
Machine 
Evaluation


-----------Regular Expression re --------------------https://ko.wikipedia.org/wiki/%EC%A0%95%EA%B7%9C_%ED%91%9C%ED%98%84%EC%8B%9D

? : unique(0번 또는 1번)
* : all (0번 이상)
+ : not null (1번 이상)
{n} : counting

A-Za-z : 알파벳만
ㄱ-힣 : 한글만

\. (escape 문자 such as \n)

([A-Za-z]+)\. .앞의 알파벳 추출
정규표현식은 패턴이므로 ()를 사용한다.
안에 []를 사용하면 문자열이다
